### Thought process:
Tool needs to send ~1000 requests, parse the json data and calculate the aggregate success rate grouped by application_name + version. 
-	Fetch the status responses from 1k servers ==>  Each request can be sent asynchronously to optimize the speed
grequests library in python would work , it took about ~4.2 seconds to do 1k requests, where as aiohttp+asyncio libraries took 50% of the time i.e ~2 secs. So going to use asyncio + aiohttp libraries in the tool
-	Parse the response and calculate the rate grouped by application + version

Going to choose python to write this tool  and structure of the project will be as below -

Project structure of the tool:
/asyncioQueryStatus
    |-- main.py
    |-- config.py
    |-- requirements.txt
    |__ /QueryStatus
         |-- __init__.py
         |-- async_fetch_parse.py 
         |-- async_tasks.py                 
         |__ /reports
             |-- query_status_report.json

Assumptions/Known limitations:
1.	What if the server/host is not up or available for status check i.e status check times out or returns nothing.   So, in this tool, those hosts will be exempted from the actual aggregation calculation.
2.	If the request response comes back with junk/garbage characters, those servers will be exempted from the report as well. 
3.	Final report is directly printed to STDOUT/screen, not written to disk.
4.	Tool is not going to handle any rate limiting aspect for how many requests being sent.
5.	Tool is not tested with huge number of requests (>100k) mainly how it works if all data loaded directly into pandas DataFrame.

Some test outputs:
C:\Users\shail\Documents\TwitterQueryStatus> python3 .\main.py
application,version,Aggregated Success Rate
WebApp1,1.0,91.03
WebApp1,2.0,90.47
WebApp2,1.0,91.68
WebApp2,2.0,89.88

Finished building report in 2.7296998500823975 seconds for 1000 hosts
PS C:\Users\shail\Documents\TwitterQueryStatus>

PS C:\Users\shail\Documents\TwitterQueryStatus> python3 .\main.py
application,version,Aggregated Success Rate
WebApp1,1.0,91.11
WebApp1,2.0,90.46
WebApp2,1.0,91.74
WebApp2,2.0,90.23

Finished building report in 23.257724046707153 seconds for 10000 hosts
PS C:\Users\shail\Documents\TwitterQueryStatus>


(env) PS C:\Users\shail\Documents\TwitterQueryStatus> py -m pip list
Package            Version
------------------ -------
aiofiles           0.8.0
aiohttp            3.8.1
aiosignal          1.2.0
async-timeout      4.0.2
attrs              21.4.0
charset-normalizer 2.0.10
frozenlist         1.3.0
idna               3.3
multidict          6.0.2
numpy              1.22.1
pandas             1.4.0
pip                21.2.4
python-dateutil    2.8.2
pytz               2021.3
setuptools         58.1.0
six                1.16.0
yarl               1.7.2
WARNING: You are using pip version 21.2.4; however, version 21.3.1 is available.
You should consider upgrading via the 'C:\Users\shail\Documents\TwitterQueryStatus\env\Scripts\python.exe -m pip install --upgrade pip' command.
(env) PS C:\Users\shail\Documents\TwitterQueryStatus>

(env) PS C:\Users\shail\Documents\TwitterQueryStatus> python .\main.py
application,version,Aggregated Success Rate
WebApp1,1.0,91.06
WebApp1,2.0,90.5
WebApp2,1.0,91.71
WebApp2,2.0,90.04

Finished building report in 4.364496946334839 seconds for 1000 hosts
(env) PS C:\Users\shail\Documents\TwitterQueryStatus>

